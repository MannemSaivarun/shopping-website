{"ast":null,"code":"import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LoginSuccess = data => ({\n  type: LOGIN_SUCCESS,\n  payload: data\n});\n_c = LoginSuccess;\nexport const LoginFailure = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n});\n_c2 = LoginFailure;\nexport const LoginRequest = () => ({\n  type: LOGIN_REQUEST\n});\n_c3 = LoginRequest;\nexport const login = (userData, navigate) => async dispatch => {\n  try {\n    //console.log(userData);\n    dispatch(LoginRequest());\n    await axios.post('http://localhost:4000/user/login', userData).then(response => {\n      console.log(\"login success\", response.data);\n      const token = response.data.token;\n      decoded_user = jwt_decode(token);\n      const userId = decoded_user.id;\n      const role = decoded_user.role;\n      dispatch(LoginSuccess({\n        token,\n        userId,\n        role\n      }));\n      if (role === 'user') {\n        window.history.replaceState(null, null, '/user');\n        navigate(`/user/${userId}`, {\n          replace: true\n        });\n      } else {\n        window.history.replaceState(null, null, '/admin');\n        navigate(`/admin/${userId}`, {\n          replace: true\n        });\n      }\n    }).catch(error => {\n      console.log(\"login failed\", error);\n      dispatch(LoginFailure(error));\n    });\n  } catch (error) {\n    console.log(\"login failed in client\", error);\n  }\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginSuccess\");\n$RefreshReg$(_c2, \"LoginFailure\");\n$RefreshReg$(_c3, \"LoginRequest\");","map":{"version":3,"names":["axios","jwt_decode","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LoginSuccess","data","type","payload","_c","LoginFailure","error","_c2","LoginRequest","_c3","login","userData","navigate","dispatch","post","then","response","console","log","token","decoded_user","userId","id","role","window","history","replaceState","replace","catch","$RefreshReg$"],"sources":["C:/Users/MYPC/Documents/project/react-redux/my-shop/src/components/actions/Loginaction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LoginSuccess = (data)=>({\r\n    type:LOGIN_SUCCESS,\r\n    payload:data\r\n})\r\n\r\nexport const LoginFailure = (error)=>({\r\n    type:LOGIN_FAILURE,\r\n    payload:error\r\n})\r\n\r\nexport const LoginRequest = ()=>({\r\n    type:LOGIN_REQUEST\r\n})\r\n\r\nexport const login = (userData,navigate)=>async (dispatch)=>{\r\n    try {\r\n        //console.log(userData);\r\n    dispatch(LoginRequest());\r\n    await axios.post('http://localhost:4000/user/login',userData)\r\n    .then((response)=>{\r\n        console.log(\"login success\",response.data)\r\n        const token = response.data.token;\r\n        decoded_user = jwt_decode(token);\r\n        const userId = decoded_user.id;\r\n        const role = decoded_user.role\r\n        dispatch(LoginSuccess({token,userId,role}));\r\n        if(role === 'user'){\r\n            window.history.replaceState(null, null, '/user');\r\n            navigate(`/user/${userId}`, { replace: true });\r\n        }else{\r\n            window.history.replaceState(null, null, '/admin');\r\n            navigate(`/admin/${userId}`, { replace: true });\r\n        }\r\n    })\r\n    .catch((error)=>{\r\n        console.log(\"login failed\",error)\r\n        dispatch(LoginFailure(error))\r\n    })\r\n    } catch (error) {\r\n        console.log(\"login failed in client\",error)\r\n    }\r\n\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AAGnC,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAE5C,OAAO,MAAMC,YAAY,GAAIC,IAAI,KAAI;EACjCC,IAAI,EAACJ,aAAa;EAClBK,OAAO,EAACF;AACZ,CAAC,CAAC;AAAAG,EAAA,GAHWJ,YAAY;AAKzB,OAAO,MAAMK,YAAY,GAAIC,KAAK,KAAI;EAClCJ,IAAI,EAACH,aAAa;EAClBI,OAAO,EAACG;AACZ,CAAC,CAAC;AAAAC,GAAA,GAHWF,YAAY;AAKzB,OAAO,MAAMG,YAAY,GAAGA,CAAA,MAAK;EAC7BN,IAAI,EAACL;AACT,CAAC,CAAC;AAAAY,GAAA,GAFWD,YAAY;AAIzB,OAAO,MAAME,KAAK,GAAGA,CAACC,QAAQ,EAACC,QAAQ,KAAG,MAAOC,QAAQ,IAAG;EACxD,IAAI;IACA;IACJA,QAAQ,CAACL,YAAY,CAAC,CAAC,CAAC;IACxB,MAAMb,KAAK,CAACmB,IAAI,CAAC,kCAAkC,EAACH,QAAQ,CAAC,CAC5DI,IAAI,CAAEC,QAAQ,IAAG;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAACF,QAAQ,CAACf,IAAI,CAAC;MAC1C,MAAMkB,KAAK,GAAGH,QAAQ,CAACf,IAAI,CAACkB,KAAK;MACjCC,YAAY,GAAGxB,UAAU,CAACuB,KAAK,CAAC;MAChC,MAAME,MAAM,GAAGD,YAAY,CAACE,EAAE;MAC9B,MAAMC,IAAI,GAAGH,YAAY,CAACG,IAAI;MAC9BV,QAAQ,CAACb,YAAY,CAAC;QAACmB,KAAK;QAACE,MAAM;QAACE;MAAI,CAAC,CAAC,CAAC;MAC3C,IAAGA,IAAI,KAAK,MAAM,EAAC;QACfC,MAAM,CAACC,OAAO,CAACC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC;QAChDd,QAAQ,CAAC,SAASS,MAAM,EAAE,EAAE;UAAEM,OAAO,EAAE;QAAK,CAAC,CAAC;MAClD,CAAC,MAAI;QACDH,MAAM,CAACC,OAAO,CAACC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC;QACjDd,QAAQ,CAAC,UAAUS,MAAM,EAAE,EAAE;UAAEM,OAAO,EAAE;QAAK,CAAC,CAAC;MACnD;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEtB,KAAK,IAAG;MACZW,OAAO,CAACC,GAAG,CAAC,cAAc,EAACZ,KAAK,CAAC;MACjCO,QAAQ,CAACR,YAAY,CAACC,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZW,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAACZ,KAAK,CAAC;EAC/C;AAGJ,CAAC;AAAA,IAAAF,EAAA,EAAAG,GAAA,EAAAE,GAAA;AAAAoB,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAApB,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}